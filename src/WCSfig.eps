%!PS-Adobe-3.0 EPSF-3.0%%Title: (WCSfig.fm)%%Version: 1 4%%Creator: Adobe Acrobat 7.0%%CreationDate: 6/8/07 9:06 AM%%For: (shaw)%%DocumentData: Clean7Bit%%LanguageLevel: 3%ADO_ContainsXMP: MainFirst%%BoundingBox: 122 181 368 676%%HiResBoundingBox: 121.89 181.417 368.22 675.78%%Pages: 0%%DocumentProcessColors: Black%%DocumentNeededResources: (atend)%%DocumentSuppliedResources:%%+ procset (Adobe Acrobat - PDF operators) 1.2 0%%+ procset (Adobe Acrobat - type operators) 1.2 0%%EndComments%%BeginProlog%%EndProlog%%BeginSetup%ADOPrintSettings: L3 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l3check 6.0 1%%Copyright: Copyright 1998,2001-2002 Adobe Systems Incorporated. All Rights Reserved.systemdict /languagelevel known{ systemdict /languagelevel get 3 lt }{ true }ifelse{initgraphics /Helvetica findfont 18 scalefont setfont72 600 moveto (Error: Your application needs to be configured) dup show ==72 580 moveto (for printing to a PostScript Language Level )dup show ==systemdict /languagelevel known {(2)}{(1)}ifelse dup show ==( printer.) dup show ==/Times-Roman findfont 16 scalefont setfont72 500 moveto (Select \252Language Level )showsystemdict /languagelevel known {(2)}{(1)}ifelse show(\272 in the PostScript options section) show72 480 moveto (of the Advanced Print dialog.) showshowpagequit}if%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResource/currentpacking where{pop currentpacking true setpacking}if%%BeginResource: procset pdfvars 6.0 1%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.%%Title: definition of dictionary of variables used by PDF & PDFText procsetsuserdict /PDF 162 dict putuserdict /PDFVars 89 dict dup begin put/docSetupDone false def/InitAll 0 def/TermAll 0 def/DocInitAll 0 def/DocTermAll 0 def/_pdfEncodings 2 array def/_pdf_str1 1 string def/_pdf_i 0 def/_pdf_na 0 def/_pdf_showproc 0 def/_italMtx [1 0 .212557 1 0 0] def/_italMtx_WMode1 [1 -.212557 0 1 0 0] def/_italMtxType0 [1 0 .1062785 1 0 0] def/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def/_basefont 0 def/_basefonto 0 def/_pdf_oldCIDInit null def/_pdf_FontDirectory 30 dict def/_categories 10 dict def/_sa? true def/_ColorSep5044? false def/nulldict 0 dict def/_processColors 0 def/overprintstack null def/_defaulttransfer currenttransfer def/_defaultflatness currentflat def/_defaulthalftone null def/_defaultcolortransfer null def/_defaultblackgeneration null def/_defaultundercolorremoval null def/_defaultcolortransfer null defPDF begin[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W/applyInterpFunc/applystitchFunc/domainClip/encodeInput/initgs/int/limit/rangeClip/defineRes/undefineRes/findRes/setSA/pl/? /! /| /: /+ /GetGlyphDirectory/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage/pdf_shfill /pdf_sethalftone] {null def} bind forallendend%%EndResourcePDFVars begin PDF begin%%BeginResource: procset pdfutil 6.0 1%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.%%Title: Basic utilities used by other PDF procsets/bd {bind def} bind def/ld {load def} bd/bld {dup length dict begin{ null def } forallbindenddef} bd/dd { PDFVars 3 1 roll put } bd/xdd { exch dd } bd/Level2?systemdict /languagelevel known{ systemdict /languagelevel get 2 ge } { false } ifelsedef/Level1? Level2? not def/Level3?systemdict /languagelevel known{systemdict /languagelevel get 3 eq } { false } ifelsedef/getifknown {2 copy known { get true } { pop pop false } ifelse} bd/here {currentdict exch getifknown} bd/isdefined? { where { pop true } { false } ifelse } bd%%EndResource%%BeginResource: procset pdf 6.0 1%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.%%Title: General operators for PDF, common to all Language Levels./cm { matrix astore concat } bd/d /setdash ld/f /fill ld/h /closepath ld/i {dup 0 eq {pop _defaultflatness} if setflat} bd/j /setlinejoin ld/J /setlinecap ld/M /setmiterlimit ld/n /newpath ld/S /stroke ld/w /setlinewidth ld/W /clip ld/sg /setgray ld/initgs {0 setgray[] 0 d0 j0 J10 M1 wfalse setSA/_defaulttransfer load settransfer0 i/RelativeColorimetric rinewpath} bd/int {dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mulexch pop add exch pop} bd/limit {dup 2 index le { exch } if popdup 2 index ge { exch } if pop} bd/domainClip {Domain aload pop 3 2 rolllimit} [/Domain] bld/applyInterpFunc {0 1 DimOut 1 sub{dup C0 exch get exchdup C1 exch get exch3 1 roll1 index sub3 indexN exp mul addexchcurrentdict /Range_lo known{dup Range_lo exch get exchRange_hi exch get3 2 roll limit}{pop}ifelseexch} forpop} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld/encodeInput {NumParts 1 sub0 1 2 index{dup Bounds exch get2 index gt{ exit }{ dup3 index eq{ exit }{ pop } ifelse} ifelse} for3 2 roll popdup Bounds exch get exchdup 1 add Bounds exch get exch2 muldup Encode exch get exch1 add Encode exch getint} [/NumParts /Bounds /Encode] bld/rangeClip {exch dup Range_lo exch getexch Range_hi exch get3 2 rolllimit} [/Range_lo /Range_hi] bld/applyStitchFunc {Functions exch get execcurrentdict /Range_lo known {0 1 DimOut 1 sub {DimOut 1 add -1 rollrangeClip} for} if} [/Functions /Range_lo /DimOut] bld/pdf_flushfilters{aload length{ dup status1 index currentfile ne and{ dup flushfile closefile }{ pop }ifelse} repeat} bd/pdf_readstring{1 index dup length 1 sub getexch readstring popexch pdf_flushfilters} bind def/pdf_dictOp{3 2 roll10 dict copybegin_Filters dup length 1 sub get defcurrentdict exch exec_Filters pdf_flushfiltersend} [/_Filters] bld/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd/pdf_shfill {{sh} /DataSource pdf_dictOp} bd/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd/masks [ 2#100000002#110000002#111000002#111100002#111110002#111111002#111111102#11111111 ] def/addNBits{/numBits exch def/byte exch defOutBitOffset numBits add 8 gt{byte OutBitOffset 8 sub bitshiftOutBuffer OutByteIndex get orOutBuffer OutByteIndex 3 -1 roll put/OutByteIndex OutByteIndex 1 add def/bitsDoneSoFar OutBitOffset def/OutBitOffset numBits 8 OutBitOffset sub sub defOutBitOffset 0 gt{byte bitsDoneSoFar bitshiftmasks numBits bitsDoneSoFar sub get andOutBuffer OutByteIndex 3 -1 roll put} if}{byte masks numBits 1 sub get andOutBitOffset neg bitshiftOutBuffer OutByteIndex get orOutBuffer OutByteIndex 3 -1 roll put/OutBitOffset OutBitOffset numBits add defOutBitOffset 8 eq{/OutBitOffset 0 def/OutByteIndex OutByteIndex 1 add def} if} ifelse} bind def/DevNNFilter{/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string defAllSource InBuffer readstring pop pop/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def/OutBuffer outlen string def0 1 outlen 1 sub { OutBuffer exch 0 put } for/InByteIndex 0 def/InBitOffset 0 def/OutByteIndex 0 def/OutBitOffset 0 def/KeepArray NumComps array def0 1 NumComps 1 sub { KeepArray exch true put } forDevNNones { KeepArray exch false put } forallWidth {KeepArray{{/bitsLeft BitsPerComponent def{bitsLeft 0 le { exit } if/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if defInBuffer InByteIndex getInBitOffset bitshiftbitsToDo addNBits/bitsLeft bitsLeft bitsToDo sub defInBitOffset bitsToDo adddup 8 mod /InBitOffset exch def8 idiv InByteIndex add /InByteIndex exch def} loop}{InBitOffset BitsPerComponent adddup 8 mod /InBitOffset exch def8 idiv InByteIndex add /InByteIndex exch def}ifelse}forall} repeatOutBuffer} bd/pdf_image{20 dict copybegin/UnusedNones where { /UnusedNones get}{false} ifelse{/NumComps Decode length 2 div cvi def/OrigDecode Decode def/NumNones DevNNones length def/NewNumComps NumComps NumNones sub def/Decode NewNumComps 2 mul cvi array def/devNNindx 0 def/decIndx 0 def/cmpIndx 0 defNumComps {cmpIndx DevNNones devNNindx get eq{/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def}{Decode decIndx OrigDecode cmpIndx 2 mul get putDecode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put/decIndx decIndx 2 add def} ifelse/cmpIndx cmpIndx 1 add def} repeat_Filters dup length 1 sub get /AllSource exch def/DataSource { DevNNFilter } def}{ _Filters dup length 1 sub get /DataSource exch def }ifelsecurrentdict image_Filters pdf_flushfiltersend} bd/pdf_maskedImage{10 dict copy begin/miDict currentdict def/DataDict DataDict 10 dict copy defDataDict begin/DataSource_Filters dup length 1 sub getdefmiDict image_Filters pdf_flushfiltersendmiDict /InterleaveType get 3 eq{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }ifend} [/miDict /DataDict /_Filters] bld/RadialShade {40 dict begin/background exch def/ext1 exch def/ext0 exch def/BBox exch def/r2 exch def/c2y exch def/c2x exch def/r1 exch def/c1y exch def/c1x exch def/rampdict exch defgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifc1x c2x eq{c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse}{/slope c2y c1y sub c2x c1x sub div def/theta slope 1 atan defc2x c1x lt c2y c1y ge and { /theta theta 180 sub def} ifc2x c1x lt c2y c1y lt and { /theta theta 180 add def} if}ifelsegsaveclippathc1x c1y translatetheta rotate-90 rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{/max { 2 copy gt { pop } {exch pop} ifelse } bind def/min { 2 copy lt { pop } {exch pop} ifelse } bind deframpdict begin40 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavec1x c1y translatetheta rotate-90 rotate/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def/c1y 0 def/c1x 0 def/c2x 0 defext0 {0 getrampcolorc2y r2 add r1 sub 0.0001 lt{c1x c1y r1 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2y r1 add r2 le{c1x c1y r1 0 360 arcfill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r1 neg def/p1y c1y def/p2x r1 def/p2y c1y defp1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin linetofill}{/AA r2 r1 sub c2y div defAA -1 eq{ /theta 89.99 def}{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}ifelse/SS1 90 theta add dup sin exch cos div def/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y p1x SS1 div neg def/SS2 90 theta sub dup sin exch cos div def/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y p2x SS2 div neg defr1 r2 gt{/L1maxX p1x yMin p1y sub SS1 div add def/L2maxX p2x yMin p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifc1x c2x sub dup mulc1y c2y sub dup muladd 0.5 exp0 dtransformdup mul exch dup mul add 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if pop/hires exch defhires mul/numpix exch def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} if/xInc c2x c1x sub numsteps div def/yInc c2y c1y sub numsteps div def/rInc r2 r1 sub numsteps div def/cx c1x def/cy c1y def/radius r1 defnewpathxInc 0 eq yInc 0 eq rInc 0 eq and and{0 getrampcolorcx cy radius 0 360 arcstrokeNumSamples 1 sub getrampcolorcx cy radius 72 hires div add 0 360 arc0 setlinewidthstroke}{0numsteps{dupsubsampling { round } ifgetrampcolorcx cy radius 0 360 arc/cx cx xInc add def/cy cy yInc add def/radius radius rInc add defcx cy radius 360 0 arcneofillrampIndxInc add}repeatpop} ifelseext1 {c2y r2 add r1 lt{c2x c2y r2 0 360 arcfill}{c2y r1 add r2 sub 0.0001 le{c2x c2y r2 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r2 neg def/p1y c2y def/p2x r2 def/p2y c2y defp1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax linetofill}{/AA r2 r1 sub c2y div defAA -1 eq{ /theta 89.99 def}{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}ifelse/SS1 90 theta add dup sin exch cos div def/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y c2y p1x SS1 div sub def/SS2 90 theta sub dup sin exch cos div def/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y c2y p2x SS2 div sub defr1 r2 lt{/L1maxX p1x yMax p1y sub SS1 div add def/L2maxX p2x yMax p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifgrestoregrestoreendendend} ifelse} bd/GenStrips {40 dict begin/background exch def/ext1 exch def/ext0 exch def/BBox exch def/y2 exch def/x2 exch def/y1 exch def/x1 exch def/rampdict exch defgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifx1 x2 eq{y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse}{/slope y2 y1 sub x2 x1 sub div def/theta slope 1 atan defx2 x1 lt y2 y1 ge and { /theta theta 180 sub def} ifx2 x1 lt y2 y1 lt and { /theta theta 180 add def} if}ifelsegsaveclippathx1 y1 translatetheta rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{rampdict begin20 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavex1 y1 translatetheta rotate/xStart 0 def/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def/ySpan yMax yMin sub def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defxStart 0 transformxEnd 0 transform3 -1 rollsub dup mul3 1 rollsub dup muladd 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if popmul/numpix exch defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} ifext0 {0 getrampcolorxMin xStart lt{ xMin yMin xMin neg ySpan rectfill } if} if/xInc xEnd xStart sub numsteps div def/x xStart def0numsteps{dupsubsampling { round } ifgetrampcolorx yMin xInc ySpan rectfill/x x xInc add deframpIndxInc add}repeatpopext1 {xMax xEnd gt{ xEnd yMin xMax xEnd sub ySpan rectfill } if} ifgrestoregrestoreendendend} ifelse} bd/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{/PDFMark5 {cleartomark} bd}{/PDFMark5 {pdfmark} bd}ifelse/ReadByPDFMark5{2 dict begin/makerString exch def string /tmpString exch def{currentfile tmpString readline popmakerString anchorsearch{pop pop cleartomark exit}{3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5} ifelse}loopend}bd%%EndResource%%BeginResource: procset pdflev3 6.0 1%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.%%Title: PDF operators, with code specific for Level 3/docinitialize {PDF begin/_defaulthalftone currenthalftone dd/_defaultblackgeneration currentblackgeneration dd/_defaultundercolorremoval currentundercolorremoval dd/_defaultcolortransfer [currentcolortransfer] dd/_defaulttransfer currenttransfer ddendPDFVars /docSetupDone true put} bd/_processColorscurrentpagedevice /ProcessColorModel getifknown{ << /DeviceGray [/Gray]/DeviceRGB [/Red /Green /Blue]/DeviceCMYK [/Cyan /Magenta /Yellow /Black]/DeviceCMY [/Cyan /Magenta /Yellow]/DeviceRGBK [/Red /Green /Blue /Black]>> exch getifknown {} {[]} ifelse }{[]}ifelsedef/initialize {PDFVars /docSetupDone get{_defaulthalftone sethalftone/_defaultblackgeneration load setblackgeneration/_defaultundercolorremoval load setundercolorremoval_defaultcolortransfer aload pop setcolortransfer}iffalse setoverprint} bd/terminate { } bd/c /curveto ld/cs /setcolorspace ld/l /lineto ld/m /moveto ld/q /gsave ld/Q /grestore ld/sc /setcolor ld/setSA/setstrokeadjust ld/re {4 2 roll m1 index 0 rlineto0 exch rlinetoneg 0 rlinetoh} bd/rssds{/Shading get /DataSource get resetfile} bd/sh{ dup /DataSource known{ dup beginDataSource type /filetype eq { DataSource resetfile } ifend} ifshfill} [/DataSource] bld/concattransferfuncs {[ 3 1 roll /exec load exch /exec load ] cvx} bd/concatandsettransfer {/_defaulttransfer load concattransferfuncs settransfer} bd/concatandsetcolortransfer {_defaultcolortransfer aload pop8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll4 -1 roll 3 -1 roll concattransferfuncs 3 1 rollconcattransferfuncssetcolortransfer} bd/defineRes/defineresource ld/undefineRes/undefineresource ld/findRes/findresource ldcurrentglobaltrue systemdict /setglobal get exec[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]{ /Generic /Category findresource dup length dict copy /Category defineresource pop }forallsystemdict /setglobal get exec/ri {/findcolorrendering isdefined?{mark exchfindcolorrenderingcounttomark 2 eq{ type /booleantype eq{ dup type /nametype eq{ dup /ColorRendering resourcestatus{ pop popdup /DefaultColorRendering ne{/ColorRendering findresourcesetcolorrendering} if} if} if} if} ifcleartomark}{ pop} ifelse} bd/CMYKDeviceNColorspaces [[/Separation /None /DeviceCMYK {0 0 0}] bind[/Separation (Black)/DeviceCMYK {0 0 0 4 -1 roll}] bind[/Separation (Yellow)/DeviceCMYK {0 0 3 -1 roll 0}] bind[/DeviceN [(Yellow) (Black)]/DeviceCMYK {0 0 4 2 roll}] bind[/Separation (Magenta)/DeviceCMYK {0 exch 0 0}] bind[/DeviceN [(Magenta) (Black)]/DeviceCMYK {0 3 1 roll 0 exch}] bind[/DeviceN [(Magenta) (Yellow)]/DeviceCMYK {0 3 1 roll 0}] bind[/DeviceN [(Magenta) (Yellow) (Black)]/DeviceCMYK {0 4 1 roll}] bind[/Separation (Cyan)/DeviceCMYK {0 0 0}] bind[/DeviceN [(Cyan) (Black)]/DeviceCMYK {0 0 3 -1 roll}] bind[/DeviceN [(Cyan) (Yellow)]/DeviceCMYK {0 exch 0}] bind[/DeviceN [(Cyan) (Yellow) (Black)]/DeviceCMYK {0 3 1 roll}] bind[/DeviceN [(Cyan) (Magenta)]/DeviceCMYK {0 0}] bind[/DeviceN [(Cyan) (Magenta) (Black)]/DeviceCMYK {0 exch}] bind[/DeviceN [(Cyan) (Magenta) (Yellow)]/DeviceCMYK {0}] bind[/DeviceCMYK] bind] def/nzopmsc {6 dict begin/kk exch def/yy exch def/mm exch def/cc exch def/sum 0 defcc 0 ne {/sum sum 2#1000 or def cc} ifmm 0 ne {/sum sum 2#0100 or def mm} ifyy 0 ne {/sum sum 2#0010 or def yy} ifkk 0 ne {/sum sum 2#0001 or def kk} ifCMYKDeviceNColorspaces sum get setcolorspacesum 0 eq {0} ifendsetcolor} [/cc /mm /yy /kk /sum] bld/every? {true3 2 roll{ 2 index exec not {pop false exit} if } forallexch pop} bd/knownColorants? {3 dict begin/colorants exch def{colorants length 0 eq {stop} if/DeviceN /ColorSpaceFamily findresource pop/cpd currentpagedevice def/dc 10 dict defcpd /SeparationColorNames getifknown{ { dc exch 0 put } forall } if_processColors { dc exch 0 put } forallcolorants {dc exch known} every?} stopped{ false }ifend} [/colorants /dc /cpd] bld/getrampcolor {cvi/indx exch def0 1 NumComp 1 sub {dupSamples exch getdup type /stringtype eq { indx get } ifexchScaling exch get aload pop3 1 rollmul add} forsetcolor} bd%%EndResource%%BeginResource: procset pdftext 6.0 1%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.%%Title: Text operators for PDFPDF /PDFText 78 dict dup begin put/docinitialize{/resourcestatus where {pop/CIDParams /ProcSet resourcestatus {pop popfalse /CIDParams /ProcSet findresource /SetBuildCompatible get exec} if} ifPDF beginPDFText /_pdfDefineIdentity-H known{ PDFText /_pdfDefineIdentity-H get exec}ifend} bd/initialize {PDFText begin} bd/terminate { end } bdLevel2?{/_safeput{3 -1 roll load 3 1 roll put}bd}{/_safeput{2 index load dup dup length exch maxlength ge{ dup length 5 add dict copy3 index xdd}{ pop }ifelse3 -1 roll load 3 1 roll put}bd}ifelse/pdf_has_composefont? systemdict /composefont known def/CopyFont {{1 index /FID ne 2 index /UniqueID ne and{ def } { pop pop } ifelse} forall} bd/Type0CopyFont{exchdup length dictbeginCopyFont[exchFDepVector{dup /FontType get 0 eq{1 index Type0CopyFont/_pdfType0 exch definefont}{/_pdfBaseFont exch2 index exec}ifelseexch}forallpop]/FDepVector exch defcurrentdictend} bdLevel2? {currentglobal true setglobal} if/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] defLevel2? {setglobal} if/modEnc {/_enc xdd/_icode 0 ddcounttomark 1 sub -1 0{indexdup type /nametype eq{_enc _icode 3 -1 roll put_icode 1 add}if/_icode xdd} forcleartomark_enc} bd/trEnc {/_enc xdd255 -1 0 {exch dup -1 eq{ pop /.notdef }{ Encoding exch get }ifelse_enc 3 1 roll put} forpop_enc} bd/TE {/_i xddStandardEncoding 256 array copy modEnc_pdfEncodings exch _i exch put} bdLevel2?{/pdfPatchCStrings{currentdict /CharStrings known currentdict /FontType known and{FontType 1 eq CharStrings type /dicttype eq and{CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and{CharStrings /mu gettype /stringtype eq{currentglobalCharStrings /mu1CharStrings /mu getdup gcheck setglobaldup length string copyputsetglobal} if} if} if} if} bd}{ /pdfPatchCStrings {} bd }ifelse/TZ{/_usePDFEncoding xddfindfontdup length 6 add dictbegin{1 index /FID ne { def } { pop pop } ifelse} forallpdfPatchCStrings/pdf_origFontName FontName def/FontName exch defcurrentdict /PaintType known{ PaintType 2 eq {/PaintType 0 def} if }if_usePDFEncoding 0 ge{/Encoding _pdfEncodings _usePDFEncoding get defpop}{_usePDFEncoding -1 eq{counttomark 0 eq{ pop }{Encoding 256 array copymodEnc /Encoding exch def}ifelse}{256 arraytrEnc /Encoding exch def}ifelse}ifelsepdf_EuroProcSet pdf_origFontName known{pdf_origFontName pdf_AddEuroGlyphProc} ifLevel2?{currentdict /pdf_origFontName undef} ifFontName currentdictenddefinefont pop}bdLevel2?{/TZG{currentglobal true setglobal2 index _pdfFontStatus{2 index findfontfalse setglobal3 index findfonttrue setglobalne{2 index findfont dup rcheck{dup length dict begin{1 index /FID ne { def } { pop pop } ifelse} forallpdfPatchCStringscurrentdict end}if3 index exch definefont pop}if} ifsetglobalTZ} bd}{/TZG {TZ} bd} ifelseLevel2?{currentglobal false setglobaluserdict /pdftext_data 5 dict putpdftext_databegin/saveStacks{pdftext_databegin/vmmode currentglobal deffalse setglobalcount array astore /os exch defendcountdictstack array dictstack pdftext_data exch /ds exch putcleardictstack pdftext_data /dscount countdictstack putpdftext_data /vmmode get setglobal} bind def/restoreStacks{pdftext_data /vmmode currentglobal put false setglobalclear cleardictstackpdftext_data /ds get duppdftext_data /dscount get 1 2 index length 1 sub{ get begin dup } forpop poppdftext_data /os get aload poppdftext_data /vmmode get setglobal} bind def/testForClonePrinterBug{currentglobal true setglobal/undefinedCategory /Generic /Category findresourcedup length dict copy /Category defineresource popsetglobalpdftext_data /saveStacks get execpdftext_data /vmmode currentglobal put false setglobal/undefined /undefinedCategory { resourcestatus } stoppedpdftext_data exch /bugFound exch putpdftext_data /vmmode get setglobalpdftext_data /restoreStacks get execpdftext_data /bugFound get} bind defendsetglobal/pdf_resourcestatuspdftext_data /testForClonePrinterBug get exec{{pdftext_data /saveStacks get execpdftext_data /os get dup dup length 1 subdup 1 sub dup 0 lt { pop 0 } ifexch 1 exch { get exch dup } forpop pop{ resourcestatus }stopped{clear cleardictstack pdftext_data /restoreStacks get exec{ pop pop } stopped pop false}{count array astore pdftext_data exch /results exch putpdftext_data /restoreStacks get exec pop poppdftext_data /results get aload pop}ifelse}}{ { resourcestatus } }ifelsebd}ifLevel2?{/_pdfUndefineResource{currentglobal 3 1 roll_pdf_FontDirectory 2 index 2 copy known{undef}{pop pop}ifelse1 index (pdf) exch _pdfConcatNames 1 index1 index 1 _pdfConcatNames 1 index5 index 1 _pdfConcatNames 1 index4{2 copy pdf_resourcestatus{pop 2 lt{2 copy findresource gcheck setglobal undefineresource}{pop pop}ifelse}{ pop pop}ifelse} repeatsetglobal} bd}{/_pdfUndefineResource { pop pop} bd}ifelseLevel2?{/_pdfFontStatus{currentglobal exch/Font pdf_resourcestatus{pop pop true}{false}ifelseexch setglobal} bd}{/_pdfFontStatusString 50 string def_pdfFontStatusString 0 (fonts/) putinterval/_pdfFontStatus{FontDirectory 1 index known{ pop true }{_pdfFontStatusString 6 42 getintervalcvs length 6 add_pdfFontStatusString exch 0 exch getinterval{ status } stopped{pop false}{{ pop pop pop pop true}{ false }ifelse}ifelse}ifelse} bd}ifelseLevel2?{/_pdfCIDFontStatus{/CIDFont /Category pdf_resourcestatus{pop pop/CIDFont pdf_resourcestatus{pop pop true}{false}ifelse}{ pop false }ifelse} bd}if/_pdfString100 100 string def/_pdfComposeFontName{dup length 1 eq{0 get1 indextype /nametype eq{_pdfString100 cvslength dup dup _pdfString100 exch (-) putinterval_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval2 index exch cvs lengthadd 1 add _pdfString100 exch 0 exch getintervalexch poptrue}{pop popfalse}ifelse}{false}ifelsedup {exch cvn exch} if} bd/_pdfConcatNames{exch_pdfString100 cvslength dup dup _pdfString100 exch (-) putinterval_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval3 -1 roll exch cvs lengthadd 1 add _pdfString100 exch 0 exch getintervalcvn} bind def/_pdfTextTempString 50 string def/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def/_pdf_CheckCIDSystemInfo{1 index _pdfTextTempString cvs(Identity) anchorsearch{pop pop pop pop true}{false_pdfRegOrderingArray{2 index exchanchorsearch{ pop pop pop true exit}{ pop }ifelse}forallexch popexch /CIDFont findresource/CIDSystemInfo get3 -1 roll /CMap findresource/CIDSystemInfo getexch3 -1 roll{2 copy/Supplement getexchdup type /dicttype eq{/Supplement get}{pop 0 }ifelsege}{ true }ifelse{dup /Registry get2 index /Registry get eq{/Ordering getexch /Ordering getdup type /arraytype eq{1 index type /arraytype eq{true1 index length 1 sub -1 0{dup 2 index exch get exch 3 index exch get ne{ pop false exit}if} forexch pop exch pop}{ pop pop false }ifelse}{eq}ifelse}{ pop pop false }ifelse}{ pop pop false }ifelse}ifelse} bind defpdf_has_composefont?{/_pdfComposeFont{2 copy _pdfComposeFontName not{2 index}if(pdf) exch _pdfConcatNamesdup _pdfFontStatus{ dup findfont 5 2 roll pop pop pop true}{4 1 roll1 index /CMap pdf_resourcestatus{pop poptrue}{false}ifelse1 index true exch{_pdfCIDFontStatus not{pop false exit}if}foralland{1 index 1 index 0 get _pdf_CheckCIDSystemInfo{3 -1 roll pop2 index 3 1 rollcomposefont true}{pop pop exch pop false}ifelse}{_pdfComposeFontName{dup _pdfFontStatus{exch pop1 index exchfindfont definefont true}{pop exch popfalse}ifelse}{exch popfalse}ifelse}ifelse{ true }{dup _pdfFontStatus{ dup findfont true }{ pop false }ifelse}ifelse}ifelse} bd}{/_pdfComposeFont{_pdfComposeFontName not{dup}ifdup_pdfFontStatus{exch pop dup findfont true}{1 indexdup type /nametype eq{pop}{cvn}ifelseeq{pop false}{dup _pdfFontStatus{dup findfont true}{pop false}ifelse}ifelse}ifelse} bd}ifelse/_pdfStyleDicts 4 dict dup begin/Adobe-Japan1 4 dict dup beginLevel2?{/Serif/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus{/HeiseiMin-W3}{/HeiseiMin-W3 _pdfCIDFontStatus{/HeiseiMin-W3}{/Ryumin-Light}ifelse}ifelsedef/SansSerif/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus{/HeiseiKakuGo-W5}{/HeiseiKakuGo-W5 _pdfCIDFontStatus{/HeiseiKakuGo-W5}{/GothicBBB-Medium}ifelse}ifelsedef/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus{/HeiseiMaruGo-W4}{/HeiseiMaruGo-W4 _pdfCIDFontStatus{/HeiseiMaruGo-W4}{/Jun101-Light-RKSJ-H _pdfFontStatus{ /Jun101-Light }{ SansSerif }ifelse}ifelse}ifelse/RoundSansSerif exch def/Default Serif def}{/Serif /Ryumin-Light def/SansSerif /GothicBBB-Medium def{(fonts/Jun101-Light-83pv-RKSJ-H) status}stopped{pop}{{ pop pop pop pop /Jun101-Light }{ SansSerif }ifelse/RoundSansSerif exch def}ifelse/Default Serif def}ifelseenddef/Adobe-Korea1 4 dict dup begin/Serif /HYSMyeongJo-Medium def/SansSerif /HYGoThic-Medium def/RoundSansSerif SansSerif def/Default Serif defenddef/Adobe-GB1 4 dict dup begin/Serif /STSong-Light def/SansSerif /STHeiti-Regular def/RoundSansSerif SansSerif def/Default Serif defenddef/Adobe-CNS1 4 dict dup begin/Serif /MKai-Medium def/SansSerif /MHei-Medium def/RoundSansSerif SansSerif def/Default Serif defenddefenddef/TZzero{/_wmode xdd/_styleArr xdd/_regOrdering xdd3 copy_pdfComposeFont{5 2 roll pop pop pop}{[0 1 _styleArr length 1 sub{_styleArr exch get_pdfStyleDicts _regOrdering 2 copy known{getexch 2 copy known not{ pop /Default }ifget}{pop pop pop /Unknown}ifelse}for]exch pop2 index 3 1 roll_pdfComposeFont{3 -1 roll pop}{findfont dup /FontName get exch}ifelse}ifelsedup /WMode 2 copy known{ get _wmode ne }{ pop pop _wmode 1 eq}ifelse{exch _wmode _pdfConcatNamesdup _pdfFontStatus{ exch pop dup findfont false}{ exch true }ifelse}{dup /FontType get 0 ne}ifelse{dup /FontType get 3 eq _wmode 1 eq and{_pdfVerticalRomanT3Font dup length 10 add dict copybegin/_basefont exchdup length 3 add dictbegin{1 index /FID ne {def}{pop pop} ifelse }forall/Encoding Encoding dup length array copydup 16#27 /quotesingle putdup 16#60 /grave put_regOrdering /Adobe-Japan1 eq{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}ifdefFontNamecurrentdictenddefinefontdef/Encoding _basefont /Encoding get def/_fauxfont true def}{dup length 3 add dictbegin{1 index /FID ne {def}{pop pop} ifelse }forallFontType 0 ne{/Encoding Encoding dup length array copydup 16#27 /quotesingle putdup 16#60 /grave put_regOrdering /Adobe-Japan1 eq{dup 16#5c /yen put}ifdef/_fauxfont true def} if} ifelse/WMode _wmode defdup dup /FontName exch defcurrentdictenddefinefont pop}{pop}ifelse/_pdf_FontDirectory 3 1 roll _safeput}bdLevel2?{/Tf {_pdf_FontDirectory 2 index 2 copy known{get exch 3 -1 roll pop}{pop pop}ifelseselectfont} bd}{/Tf {_pdf_FontDirectory 2 index 2 copy known{get exch 3 -1 roll pop}{pop pop}ifelseexch findfont exchdup type /arraytype eq{makefont}{scalefont}ifelsesetfont} bd}ifelse/cshow where{pop /pdf_cshow /cshow load dd/pdf_remove2 {pop pop} dd}{/pdf_cshow {exch forall} dd/pdf_remove2 {} dd} ifelse/pdf_xshow{/_pdf_na xdd/_pdf_i 0 ddcurrentpoint/_pdf_y xdd/_pdf_x xdd{pdf_remove2_pdf_str1 exch 0 exch put_pdf_str1 /_pdf_showproc load exec{_pdf_na _pdf_i get} stopped{ pop pop }{_pdf_x _pdf_y moveto0rmoveto}ifelse_pdf_i 1 add /_pdf_i xddcurrentpoint/_pdf_y xdd/_pdf_x xdd}exchpdf_cshow} bd/pdf_yshow{/_pdf_na xdd/_pdf_i 0 ddcurrentpoint/_pdf_y xdd/_pdf_x xdd{pdf_remove2_pdf_str1 exch 0 exch put_pdf_str1 /_pdf_showproc load exec{_pdf_na _pdf_i get} stopped{ pop pop }{_pdf_x _pdf_y moveto0 exchrmoveto}ifelse_pdf_i 1 add /_pdf_i xddcurrentpoint/_pdf_y xdd/_pdf_x xdd}exchpdf_cshow} bd/pdf_xyshow{/_pdf_na xdd/_pdf_i 0 ddcurrentpoint/_pdf_y xdd/_pdf_x xdd{pdf_remove2_pdf_str1 exch 0 exch put_pdf_str1 /_pdf_showproc load exec{_pdf_na _pdf_i get} stopped{ pop pop }{1 pop{_pdf_na _pdf_i 1 add get} stopped{ pop pop pop}{_pdf_x _pdf_y movetormoveto}ifelse}ifelse_pdf_i 2 add /_pdf_i xddcurrentpoint/_pdf_y xdd/_pdf_x xdd}exchpdf_cshow} bd/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bdLevel2? _ColorSep5044? not and{/pdfxs {{xshow} stopped {pdfl1xs} if} bd/pdfys {{yshow} stopped {pdfl1ys} if} bd/pdfxys {{xyshow} stopped {pdfl1xys} if} bd}{/pdfxs /pdfl1xs load dd/pdfys /pdfl1ys load dd/pdfxys /pdfl1xys load dd} ifelse/pdf_charpath {false charpath} bd/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd/pdf_strokepath{{pdf_remove2_pdf_str1 exch 0 exch put_pdf_str1 false charpathcurrentpoint S moveto} bindexch pdf_cshow} bd/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bdLevel2? {currentglobal true setglobal} if/d0/setcharwidth ld/nND {{/.notdef} repeat} bd/T3Defs {/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec}def/BuildGlyph {exch beginGlyphProcs exch get execend} def/_pdfT3Font true def} bd/_pdfBoldRomanWidthProc{stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth0 0} bd/_pdfType0WidthProc{dup stringwidth 0 0 moveto2 index true charpath pathbbox0 -17 index 2 div .88setcachedevice2pop0 0} bd/_pdfType0WMode1WidthProc{dup stringwidthpop 2 div neg -0.882 copymoveto0 -15 -1 roll true charpath pathbboxsetcachedevice} bd/_pdfBoldBaseFont11 dict begin/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding cHexEncoding def/_setwidthProc /_pdfBoldRomanWidthProc load def/_bcstr1 1 string def/BuildChar{exch begin_basefont setfont_bcstr1 dup 0 4 -1 roll putdup_setwidthProc3 copymovetoshow_basefonto setfontmovetoshowend}bdcurrentdictenddefpdf_has_composefont?{/_pdfBoldBaseCIDFont11 dict begin/CIDFontType 1 def/CIDFontName /_pdfBoldBaseCIDFont def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/_setwidthProc /_pdfType0WidthProc load def/_bcstr2 2 string def/BuildGlyph{exch begin_basefont setfont_bcstr2 1 2 index 256 mod put_bcstr2 0 3 -1 roll 256 idiv put_bcstr2 dup _setwidthProc3 copymovetoshow_basefonto setfontmovetoshowend}bdcurrentdictenddef/_pdfDefineIdentity-H{/Identity-H /CMap PDFText /pdf_resourcestatus get exec{pop pop}{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CIDSystemInfo3 dict begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defcurrentdictenddef/CMapName /Identity-H def/CMapVersion 1 def/CMapType 1 def1 begincodespacerange<0000> <ffff>endcodespacerange1 begincidrange<0000> <ffff> 0endcidrangeendcmapCMapName currentdict/CMap defineresource popendend} ifelse} def} if/_pdfVerticalRomanT3Font10 dict begin/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/_bcstr1 1 string def/BuildChar{exch begin_basefont setfont_bcstr1 dup 0 4 -1 roll putdup_pdfType0WidthProcmovetoshowend}bdcurrentdictenddefLevel2? {setglobal} if/MakeBoldFont{dup /ct_SyntheticBold known{dup length 3 add dict beginCopyFont/ct_StrokeWidth .03 0 FontMatrix idtransform pop def/ct_SyntheticBold true defcurrentdictenddefinefont}{dup dup length 3 add dictbeginCopyFont/PaintType 2 def/StrokeWidth .03 0 FontMatrix idtransform pop def/dummybold currentdictenddefinefontdup /FontType get dup 9 ge exch 11 le and{_pdfBoldBaseCIDFontdup length 3 add dict copy begindup /CIDSystemInfo get /CIDSystemInfo exch def/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont/_basefont exch def/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont/_basefonto exch defcurrentdictend/CIDFont defineresource}{_pdfBoldBaseFontdup length 3 add dict copy begin/_basefont exch def/_basefonto exch defcurrentdictenddefinefont}ifelse}ifelse} bd/MakeBold {1 index_pdf_FontDirectory 2 index 2 copy known{get}{exch pop}ifelsefindfontdup/FontType get 0 eq{dup /WMode known {dup /WMode get 1 eq }{false} ifelseversion length 4 geand{version 0 4 getinterval cvi 2015 ge }{true}ifelse{/_pdfType0WidthProc}{/_pdfType0WMode1WidthProc}ifelse_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put{MakeBoldFont} Type0CopyFont definefont}{dup /_fauxfont known not 1 index /SubstMaster known not and{_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load putMakeBoldFont}{2 index 2 index eq{ exch pop }{dup length dict beginCopyFontcurrentdictenddefinefont}ifelse}ifelse}ifelsepop popdup /dummybold ne{/_pdf_FontDirectory exch dup _safeput }{ pop }ifelse}bd/MakeItalic {_pdf_FontDirectory exch 2 copy known{get}{exch pop}ifelsedup findfontdup /FontInfo 2 copy known{get/ItalicAngle 2 copy known{get 0 eq }{ pop pop true}ifelse}{ pop pop true}ifelse{exch popdup /FontType get 0 eq Level2? not and{ dup /FMapType get 6 eq }{ false }ifelse{dup /WMode 2 copy known{get 1 eq{ _italMtx_WMode1Type0 }{ _italMtxType0 }ifelse}{ pop pop _italMtxType0 }ifelse}{dup /WMode 2 copy known{get 1 eq{ _italMtx_WMode1 }{ _italMtx }ifelse}{ pop pop _italMtx }ifelse}ifelsemakefontdup /FontType get 42 eq Level2? not or{dup length dict beginCopyFontcurrentdictend}if1 index exchdefinefont pop/_pdf_FontDirectory exch dup _safeput}{pop2 copy ne{/_pdf_FontDirectory 3 1 roll _safeput}{ pop pop }ifelse}ifelse}bd/MakeBoldItalic {/dummybold exchMakeBold/dummyboldMakeItalic}bdLevel2?{/pdf_CopyDict{1 index length add dict copy}def}{/pdf_CopyDict{1 index length add dict1 index wcheck{ copy }{ begin{def} forallcurrentdictend}ifelse}def}ifelse/pdf_AddEuroGlyphProc{currentdict /CharStrings known{CharStrings /Euro known not{dup/CharStringsCharStrings 1 pdf_CopyDictbegin/Euro pdf_EuroProcSet 4 -1 roll get defcurrentdictenddef/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def/pdf_PathOps /pdf_PathOps load def/Symbol eq Encoding 160 get /.notdef eq and{/Encoding Encoding dup length array copydup 160 /Euro put def}if}{ pop}ifelse}{ pop}ifelse}defLevel2? {currentglobal true setglobal} if/pdf_PathOps 4 dict dup begin/m {moveto} def/l {lineto} def/c {curveto} def/cp {closepath} defenddef/pdf_PSBuildGlyph{gsave8 -1 roll pop7 1 rollcurrentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelsedup 9 1 roll{currentdict /StrokeWidth 2 copy known{get 2 div5 1 roll4 -1 roll 4 index sub4 1 roll3 -1 roll 4 index sub3 1 rollexch 4 index add exch4 index add5 -1 roll pop}{pop pop}ifelse}ifsetcachedevicepdf_PathOps beginexecend{currentdict /StrokeWidth 2 copy known{ get }{ pop pop 0 }ifelsesetlinewidth stroke}{fill}ifelsegrestore} def/pdf_EuroProcSet 13 dict defpdf_EuroProcSetbegin/Courier-Bold{600 0 6 -12 585 612{385 274 m180 274 l179 283 179 293 179 303 c179 310 179 316 180 323 c398 323 l423 404 l197 404 l219 477 273 520 357 520 c409 520 466 490 487 454 c487 389 l579 389 l579 612 l487 612 l487 560 l449 595 394 612 349 612 c222 612 130 529 98 404 c31 404 l6 323 l86 323 l86 304 l86 294 86 284 87 274 c31 274 l6 193 l99 193 l129 77 211 -12 359 -12 c398 -12 509 8 585 77 c529 145 l497 123 436 80 356 80 c285 80 227 122 198 193 c360 193 lcp600 0 m}pdf_PSBuildGlyph} def/Courier-BoldOblique /Courier-Bold load def/Courier{600 0 17 -12 578 584{17 204 m97 204 l126 81 214 -12 361 -12 c440 -12 517 17 578 62 c554 109 l501 70 434 43 366 43 c266 43 184 101 154 204 c380 204 l400 259 l144 259 l144 270 143 281 143 292 c143 299 143 307 144 314 c418 314 l438 369 l153 369 l177 464 249 529 345 529 c415 529 484 503 522 463 c522 391 l576 391 l576 584 l522 584 l522 531 l473 566 420 584 348 584 c216 584 122 490 95 369 c37 369 l17 314 l87 314 l87 297 l87 284 88 272 89 259 c37 259 lcp600 0 m}pdf_PSBuildGlyph} def/Courier-Oblique /Courier load def/Helvetica{556 0 24 -19 541 703{541 628 m510 669 442 703 354 703 c201 703 117 607 101 444 c50 444 l25 372 l97 372 l97 301 l49 301 l24 229 l103 229 l124 67 209 -19 350 -19 c435 -19 501 25 509 32 c509 131 l492 105 417 60 343 60 c267 60 204 127 197 229 c406 229 l430 301 l191 301 l191 372 l455 372 l479 444 l194 444 l201 531 245 624 348 624 c433 624 484 583 509 534 ccp556 0 m}pdf_PSBuildGlyph} def/Helvetica-Oblique /Helvetica load def/Helvetica-Bold{556 0 12 -19 563 710{563 621 m537 659 463 710 363 710 c216 710 125 620 101 462 c51 462 l12 367 l92 367 l92 346 l92 337 93 328 93 319 c52 319 l12 224 l102 224 l131 58 228 -19 363 -19 c417 -19 471 -12 517 18 c517 146 l481 115 426 93 363 93 c283 93 254 166 246 224 c398 224 l438 319 l236 319 l236 367 l457 367 l497 462 l244 462 l259 552 298 598 363 598 c425 598 464 570 486 547 c507 526 513 517 517 509 ccp556 0 m}pdf_PSBuildGlyph} def/Helvetica-BoldOblique /Helvetica-Bold load def/Symbol{750 0 20 -12 714 685{714 581 m650 645 560 685 465 685 c304 685 165 580 128 432 c50 432 l20 369 l116 369 l115 356 115 347 115 337 c115 328 115 319 116 306 c50 306 l20 243 l128 243 l165 97 300 -12 465 -12 c560 -12 635 25 685 65 c685 155 l633 91 551 51 465 51 c340 51 238 131 199 243 c555 243 l585 306 l184 306 l183 317 182 326 182 336 c182 346 183 356 184 369 c614 369 l 644 432 l199 432 l233 540 340 622 465 622 c555 622 636 580 685 520 ccp750 0 m}pdf_PSBuildGlyph} def/Times-Bold{500 0 16 -14 478 700{367 308 m224 308 l224 368 l375 368 l380 414 l225 414 l230 589 257 653 315 653 c402 653 431 521 444 457 c473 457 l473 698 l444 697 l441 679 437 662 418 662 c393 662 365 700 310 700 c211 700 97 597 73 414 c21 414 l16 368 l69 368 l69 359 68 350 68 341 c68 330 68 319 69 308 c21 308 l16 262 l73 262 l91 119 161 -14 301 -14 c380 -14 443 50 478 116 c448 136 l415 84 382 40 323 40 c262 40 231 77 225 262 c362 262 lcp500 0 m}pdf_PSBuildGlyph} def/Times-BoldItalic{500 0 9 -20 542 686{542 686 m518 686 l513 673 507 660 495 660 c475 660 457 683 384 683 c285 683 170 584 122 430 c58 430 l34 369 l105 369 l101 354 92 328 90 312 c34 312 l9 251 l86 251 l85 238 84 223 84 207 c84 112 117 -14 272 -14 c326 -14 349 9 381 9 c393 9 393 -10 394 -20 c420 -20 l461 148 l429 148 l416 109 362 15 292 15 c227 15 197 55 197 128 c197 162 204 203 216 251 c378 251 l402 312 l227 312 l229 325 236 356 241 369 c425 369 l450 430 l255 430 l257 435 264 458 274 488 c298 561 337 654 394 654 c437 654 484 621 484 530 c484 516 l516 516 lcp500 0 m}pdf_PSBuildGlyph} def/Times-Italic{500 0 23 -10 595 692{399 317 m196 317 l199 340 203 363 209 386 c429 386 l444 424 l219 424 l246 514 307 648 418 648 c448 648 471 638 492 616 c529 576 524 529 527 479 c549 475 l595 687 l570 687 l562 674 558 664 542 664 c518 664 474 692 423 692 c275 692 162 551 116 424 c67 424 l53 386 l104 386 l98 363 93 340 90 317 c37 317 l23 279 l86 279 l85 266 85 253 85 240 c85 118 137 -10 277 -10 c370 -10 436 58 488 128 c466 149 l424 101 375 48 307 48 c212 48 190 160 190 234 c190 249 191 264 192 279 c384 279 lcp500 0 m}pdf_PSBuildGlyph} def/Times-Roman{500 0 10 -12 484 692{347 298 m171 298 l170 310 170 322 170 335 c170 362 l362 362 l374 403 l172 403 l184 580 244 642 308 642 c380 642 434 574 457 457 c481 462 l474 691 l449 691 l433 670 429 657 410 657 c394 657 360 692 299 692 c204 692 94 604 73 403 c22 403 l10 362 l70 362 l69 352 69 341 69 330 c69 319 69 308 70 298 c22 298 l10 257 l73 257 l97 57 216 -12 295 -12 c364 -12 427 25 484 123 c458 142 l425 101 384 37 316 37 c256 37 189 84 173 257 c335 257 lcp500 0 m}pdf_PSBuildGlyph} defendLevel2? {setglobal} ifcurrentdict readonly pop end%%EndResourcePDFText begin[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron0 TE[1/dotlessi/caron 39/quotesingle 96/grave 127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis1 TEend%%BeginResource: procset pdfasc.prc 6.0 1%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved./ASR {13 dict begin/mirV? exch def/mirH? exch def/center? exch def/autorotate? exch def/angle exch def/shrink exch def/Pury exch def/Purx exch def/Plly exch def/Pllx exch def/Dury exch def/Durx exch def/Dlly exch def/Dllx exch defDury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }{ ITransDBBox }ifelse/PHt Pury Plly sub def/PW Purx Pllx sub def/DHt Dury Dlly sub def/DW Durx Dllx sub defangle 90 eq angle 270 eq or{PHt /PHt PW def /PW exch def} ifautorotate? PHt PW ne and DHt DW ne and{DHt DW gePHt PW gene{ /angle angle 90 add defPHt /PHt PW def /PW exch def}if} ifangle 0 ne{/angle angle 360 mod defangle rotateangle 90 eq{ 0 DW neg translate }ifangle 180 eq{ DW neg DHt neg translate }ifangle 270 eq{ DHt neg 0 translate }if} ifcenter?{ITransBBoxDurx Dllx add 2 div Dury Dlly add 2 divPurx Pllx add -2 div Pury Plly add -2 div3 -1 roll add exch3 -1 roll add exchtranslate}{ITransBBoxangle 0 eq{Dllx Pllx sub Dury Pury sub}ifangle 90 eq{Durx Purx sub Dury Pury sub}ifangle 180 eq{Durx Purx sub Dlly Plly sub}ifangle 270 eq{Dllx Pllx sub Dlly Plly sub}iftranslate}ifelsemirH? mirV? or{ITransBBoxmirH?{-1 1 scaleDurx Dllx add neg 0 translate} ifmirV?{1 -1 scale0 Dury Dlly add neg translate} if} ifshrink 0 ne{ITransBBoxDury Dlly sub Pury Plly sub divDurx Dllx sub Purx Pllx sub div2 copy gt { exch } if popshrink 1 eq{Durx Dllx add 2 div Dury Dlly add 2 div translatedup scalePurx Pllx add -2 div Pury Plly add -2 div translate}{shrink 2 eq 1 index 1.0 lt and{Durx Dllx add 2 div Dury Dlly add 2 div translatedup scalePurx Pllx add -2 div Pury Plly add -2 div translate}{ pop }ifelse}ifelse} ifend} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]bld/GClipBBox{gsave newpath clippath pathbbox newpath grestore/Dury exch def/Durx exch def/Dlly exch def/Dllx exch defITransDBBox} [/Durx /Dury /Dllx /Dlly]bld/GPageBBox{{currentpagedevice /PageSize get aload pop/Devury exch def /Devurx exch def/Devllx 0 def /Devlly 0 defITransBBox}stopped{ GClipBBox }if} [/Devurx /Devury /Devllx /Devlly ]bld/ITransDBBox{Durx Dury transform matrix defaultmatrix itransform/Devury exch def/Devurx exch defDllx Dlly transform matrix defaultmatrix itransform/Devlly exch def/Devllx exch defDevury Devlly lt {/Devlly Devury /Devury Devlly def def} ifDevurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]bld/ITransBBox{/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix defDevllx Devlly um itransformDevurx Devury um itransform/Dury exch def/Durx exch def/Dlly exch def/Dllx exch defDury Dlly lt {/Dlly Dury /Dury Dlly def def} ifDurx Dllx lt {/Dllx Durx /Durx Dllx def def} if} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]bld%%EndResourcecurrentdict readonly popend end/currentpacking where {pop setpacking}ifPDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF beginPDFVars/DocInitAll get exec PDFVars/InitAll get exec%%IncludeResource TimesNewRomanPS-BoldMT[ 0 /space/dotlessi/caron/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis/N10 (TimesNewRomanPS-BoldMT) -1 TZ%%IncludeResource TimesNewRomanPSMT[ 0 /space/dotlessi/caron/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis/N12 (TimesNewRomanPSMT) -1 TZ%%IncludeResource CourierNewPS-BoldMT[ 0 /space/dotlessi/caron/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis/N17 (CourierNewPS-BoldMT) -1 TZ%%IncludeResource TimesNewRomanPS-BoldItalicMT[ 0 /space/dotlessi/caron/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis/N18 (TimesNewRomanPS-BoldItalicMT) -1 TZ[/NamespacePush PDFMark5[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5[{Metadata_In_EPS} 3664 (% &end XMP packet& %) ReadByPDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2007-06-08T09:06:19-07:00</xap:CreateDate>
         <xap:ModifyDate>2007-06-08T09:06:19-07:00</xap:ModifyDate>
         <xap:MetadataDate>2007-06-08T09:06:19-07:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:DA71CAA5173111DCA144F39E74530323</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:DA71CAA5173111DCA144F39E74530323</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:2a8b1fc5-15da-11dc-99c3-0016cb39930e</stRef:instanceID>
            <stRef:documentID>uuid:028e867c-15da-11dc-90dd-0016cb39930e</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:creator>
            <rdf:Seq>
               <rdf:li>shaw</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">WCSfig.fm</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>% &end XMP packet& %[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5[/NamespacePop PDFMark5PDFVars/TermAll get exec end end PDF /docinitialize get exec
%%EndSetupPDFVars begin PDF begin PDFVars/InitAll get exec121.89 181.417 246.331 494.362 rectclipq121.89 181.417 m368.22 181.417 l368.22 675.78 l121.89 675.78 lhWn0.02 setsmoothnessn[/DeviceGray] cs 0.75 sc126.000000 636.000000 144.000000 36.000000 rectfill
n126.000000 671.760010 144.239990 0.479980 rectfill
n269.760010 635.760010 0.479980 36.239990 rectfill
n125.760002 635.760010 144.239990 0.479980 rectfill
n125.760002 636.000000 0.480003 36.239990 rectfill
n144.000000 641.400024 108.000000 25.200012 rectfill
0.0 sc185.34 658.62 m/N10 12.0 Tf(Pixel)[7.32471 3.3288 5.9928 5.3208 3.3288 ] pdfxs166.68 644.64 m(Coordinates)[8.6604 5.9964 5.9964 5.3244 6.6684 3.3324 6.6684 5.9964 3.99231 5.3244 4.66449 ] pdfxsn144.0 599.76 m142.14 599.7 l142.2 599.7 l140.4 599.4 l138.72 598.98 l138.78 598.98 l137.1 598.38 l135.54 597.6 l134.04 596.7 l134.1 596.76 l132.72 595.74 l131.46 594.54 l130.26 593.28 l129.24 591.9 l129.3 591.96 l128.4 590.46 l127.62 588.9 l127.02 587.22 l127.02 587.28 l126.6 585.6 l126.3 583.8 l126.3 583.86 l126.602 576.075 125.52 568.129 126.6 560.4 c126.6 560.46 l127.02 558.72 l127.62 557.04 l127.62 557.1 l128.4 555.54 l129.3 554.04 l129.24 554.04 l130.26 552.66 l130.26 552.72 l131.46 551.46 l132.72 550.32 l134.1 549.24 l134.04 549.24 l135.54 548.34 l137.1 547.62 l137.1 547.68 l138.78 547.08 l138.72 547.08 l140.4 546.6 l142.2 546.36 l144.06 546.24 l144.0 546.24 l252.0 546.24 l253.86 546.36 l255.6 546.6 l255.54 546.6 l257.28 547.08 l258.96 547.68 l258.96 547.62 l260.52 548.34 l260.46 548.34 l260.7 547.92 l259.14 547.2 l257.46 546.6 l257.4 546.6 l255.66 546.12 l253.92 545.88 l252.06 545.76 l144.0 545.76 l142.14 545.88 l140.34 546.12 l140.28 546.12 l138.029 546.702 135.736 547.514 133.8 548.82 c133.8 548.88 l132.42 549.96 l131.16 551.1 l131.1 551.1 l129.381 552.637 128.173 554.799 127.2 556.86 c127.14 556.86 l124.789 562.722 126.212 566.188 125.76 573.0 c126.119 579.67 124.632 584.913 127.98 590.7 c131.01 596.496 137.434 600.351 144.0 600.24 cfn260.46 548.34 m261.96 549.24 l263.34 550.32 l264.6 551.46 l264.54 551.4 l265.68 552.66 l266.76 554.04 l267.66 555.54 l267.66 555.48 l268.38 557.04 l268.32 557.04 l268.92 558.72 l269.4 560.46 l269.4 560.4 l269.64 562.14 l269.76 564.0 l269.76 582.0 l269.76 581.94 l269.64 583.8 l269.4 585.6 l268.92 587.28 l268.92 587.22 l268.32 588.9 l268.38 588.9 l267.66 590.46 l266.76 591.96 l266.76 591.9 l265.68 593.28 l264.54 594.54 l263.28 595.74 l263.34 595.74 l261.96 596.76 l261.96 596.7 l260.46 597.6 l258.9 598.38 l258.96 598.38 l257.28 598.98 l255.54 599.4 l255.6 599.4 l253.86 599.7 l252.0 599.76 l144.0 599.76 l144.0 600.24 l252.0 600.24 l253.86 600.18 l253.92 600.18 l255.66 599.88 l257.4 599.46 l257.46 599.46 l259.14 598.86 l259.14 598.8 l260.7 598.02 l262.2 597.12 l262.26 597.12 l263.64 596.1 l264.9 594.9 l264.9 594.84 l266.04 593.58 l267.12 592.2 l267.18 592.2 l268.08 590.7 l268.08 590.64 l268.8 589.08 l269.4 587.4 l269.88 585.72 l269.88 585.66 l270.725 577.87 270.215 569.906 270.12 562.08 c269.497 555.973 266.031 550.924 260.7 547.92 cf143.88 583.02 m/N12 12.0 Tf(Linear transformation: )[7.34391 3.348 6.012 5.34 5.34 3.95991 3.0 3.348 4.00791 5.2824 6.0 4.68009 4.00791 6.012 3.95991 9.348 5.2824 3.348 3.348 5.94 6.012 3.348 3.0 ] pdfxs149.52 568.98 m(translation, rotation, )[3.3348 3.99471 5.3268 5.9988 4.66689 3.3348 5.3268 3.3348 3.3348 5.9988 5.9988 2.9988 3.0 3.99471 5.9988 3.3348 5.3268 3.3348 3.3348 5.9988 5.9988 2.9988 3.0 ] pdfxs171.06 555.0 m(skew, scale)[4.67289 6.0048 5.3328 7.8576 3.0048 3.0 4.67289 5.3328 5.3328 3.3408 5.3328 ] pdfxsn144.06 437.76 m142.2 437.64 l140.4 437.4 l138.72 436.98 l138.78 436.98 l137.1 436.32 l135.54 435.6 l134.04 434.7 l134.1 434.76 l132.72 433.74 l131.46 432.54 l130.26 431.28 l129.24 429.9 l129.3 429.96 l128.4 428.46 l127.62 426.9 l127.02 425.22 l127.02 425.28 l126.6 423.54 l126.3 421.8 l126.3 421.86 l126.24 420.0 l126.3 418.14 l126.6 416.4 l126.6 416.46 l127.02 414.72 l127.62 413.04 l127.62 413.1 l128.4 411.54 l129.3 410.04 l129.24 410.04 l130.26 408.66 l130.26 408.72 l131.46 407.46 l132.72 406.32 l134.1 405.24 l134.04 405.24 l135.54 404.34 l137.1 403.62 l138.78 402.96 l138.72 403.02 l140.4 402.6 l142.2 402.36 l144.06 402.24 l144.0 402.24 l252.0 402.24 l253.86 402.36 l255.6 402.6 l255.54 402.6 l257.28 403.02 l257.28 402.96 l258.96 403.62 l260.52 404.34 l260.46 404.34 l260.7 403.92 l259.14 403.2 l257.46 402.54 l257.4 402.54 l255.66 402.12 l253.92 401.88 l252.06 401.76 l144.0 401.76 l142.14 401.88 l140.34 402.12 l140.28 402.12 l138.301 402.47 135.521 403.672 133.8 404.82 c133.8 404.88 l132.42 405.96 l131.16 407.1 l131.1 407.1 l129.381 408.637 128.173 410.799 127.2 412.86 c127.14 412.86 l123.07 422.961 128.185 434.131 138.6 437.4 c138.6 437.46 l140.28 437.88 l140.34 437.88 l142.14 438.12 l144.0 438.24 lfn260.46 404.34 m261.96 405.24 l263.34 406.32 l264.6 407.46 l264.54 407.4 l265.68 408.66 l266.76 410.04 l267.66 411.54 l267.66 411.48 l268.38 413.04 l268.32 413.04 l268.92 414.72 l269.4 416.46 l269.4 416.4 l269.64 418.14 l269.76 420.0 l269.76 419.94 l269.64 421.8 l269.4 423.54 l268.92 425.28 l268.92 425.22 l268.32 426.9 l268.38 426.9 l267.66 428.46 l266.76 429.96 l266.76 429.9 l265.68 431.28 l264.54 432.54 l263.28 433.74 l263.34 433.74 l261.96 434.76 l261.96 434.7 l260.46 435.6 l260.52 435.6 l258.96 436.32 l257.28 436.98 l255.54 437.4 l255.6 437.4 l253.86 437.64 l252.0 437.76 l144.0 437.76 l144.06 437.76 l144.0 438.24 l252.06 438.24 l253.92 438.12 l255.66 437.88 l257.4 437.46 l257.46 437.4 l259.14 436.74 l260.7 436.02 l262.2 435.12 l262.26 435.12 l263.64 434.1 l264.9 432.9 l264.9 432.84 l266.04 431.58 l267.12 430.2 l267.18 430.2 l273.042 421.129 270.227 409.188 260.7 403.92 cf173.16 425.82 m(Rescale to)[7.99929 5.3232 4.66329 5.3232 5.3232 3.3312 5.3232 3.0 3.3312 5.9952 ] pdfxs164.82 411.78 m(physical units)[6.0036 6.0036 6.0036 4.67169 3.3396 5.3316 5.3316 3.3396 3.0 6.0036 6.0036 3.3396 3.3396 4.67169 ] pdfxsn0.75 sc126.000000 474.000000 144.000000 36.000000 rectfill
n126.000000 509.760010 144.239990 0.479980 rectfill
n269.760010 473.760010 0.479980 36.239990 rectfill
n125.760002 473.760010 144.239990 0.479980 rectfill
n125.760002 474.000000 0.480003 36.239990 rectfill
n144.000000 479.399994 108.000000 25.200012 rectfill
0.0 sc150.54 496.62 m/N10 12.0 Tf(IntermediatePixel)[4.61769 6.7176 3.98751 5.3196 5.3196 9.98751 5.3196 6.6636 3.3276 5.9916 3.98751 8.3424 7.32351 3.3276 5.9916 5.3196 3.3276 ] pdfxs166.68 482.58 m(Coordinates)[8.6604 5.9964 5.9964 5.3244 6.6684 3.3324 6.6684 5.9964 3.99231 5.3244 4.66449 ] pdfxsn0.75 sc126.000000 330.000000 144.000000 36.000000 rectfill
n126.000000 365.760010 144.239990 0.479980 rectfill
n269.760010 329.760010 0.479980 36.239990 rectfill
n125.760002 329.760010 144.239990 0.479980 rectfill
n125.760002 330.000000 0.480003 36.239990 rectfill
n144.000000 335.399994 108.000000 25.200012 rectfill
0.0 sc146.88 352.62 m(IntermediateWorld)[4.61769 6.6576 4.00431 5.3364 5.3364 10.0043 5.3364 6.6804 3.3444 5.94 4.00431 8.3424 11.34 6.0 5.3364 3.3444 6.6804 ] pdfxs166.68 338.58 m(Coordinates)[8.6604 5.9964 5.9964 5.3244 6.6684 3.3324 6.6684 5.9964 3.99231 5.3244 4.66449 ] pdfxsn144.06 293.76 m142.2 293.64 l140.4 293.4 l138.72 292.92 l138.78 292.92 l137.1 292.32 l135.54 291.6 l134.04 290.7 l134.1 290.76 l132.72 289.68 l131.46 288.54 l130.26 287.28 l129.24 285.9 l129.3 285.96 l128.4 284.46 l127.62 282.9 l127.02 281.22 l127.02 281.28 l126.6 279.54 l126.3 277.8 l126.3 277.86 l126.24 276.0 l126.3 274.14 l126.6 272.34 l126.6 272.4 l127.02 270.72 l127.62 269.04 l127.62 269.1 l128.4 267.54 l129.3 266.04 l129.24 266.04 l130.26 264.66 l130.26 264.72 l131.46 263.46 l132.72 262.26 l134.1 261.24 l134.04 261.24 l135.54 260.34 l137.1 259.56 l137.1 259.62 l138.78 259.02 l138.72 259.02 l140.4 258.6 l142.2 258.3 l142.14 258.3 l144.0 258.24 l252.0 258.24 l253.86 258.3 l255.6 258.6 l255.54 258.6 l257.28 259.02 l258.96 259.62 l258.9 259.56 l260.46 260.34 l260.7 259.92 l259.14 259.14 l257.46 258.54 l257.4 258.54 l255.66 258.12 l253.92 257.82 l253.86 257.82 l252.0 257.76 l144.0 257.76 l142.14 257.82 l140.34 258.12 l140.28 258.12 l137.751 258.643 135.958 259.414 133.8 260.82 c133.8 260.88 l130.849 262.785 128.594 265.64 127.2 268.86 c127.14 268.86 l123.311 278.247 127.572 288.889 136.92 292.74 c136.92 292.8 l139.729 293.899 140.981 294.119 144.0 294.24 cfn260.46 260.34 m261.96 261.24 l263.34 262.26 l263.28 262.26 l264.54 263.46 l264.54 263.4 l265.68 264.66 l266.76 266.04 l267.66 267.54 l267.66 267.48 l268.38 269.04 l268.32 269.04 l268.92 270.72 l269.4 272.4 l269.4 272.34 l269.64 274.14 l269.76 276.0 l269.76 275.94 l269.64 277.8 l269.4 279.54 l268.92 281.28 l268.92 281.22 l268.32 282.9 l268.38 282.9 l267.66 284.46 l266.76 285.96 l266.76 285.9 l265.68 287.28 l264.54 288.54 l264.6 288.54 l263.34 289.68 l261.96 290.76 l261.96 290.7 l260.46 291.6 l260.52 291.6 l258.96 292.32 l257.28 292.92 l255.54 293.4 l255.6 293.4 l253.86 293.64 l252.0 293.76 l144.0 293.76 l144.06 293.76 l144.0 294.24 l252.06 294.24 l253.92 294.12 l255.66 293.88 l257.4 293.4 l257.46 293.4 l259.14 292.8 l259.14 292.74 l260.7 292.02 l262.2 291.12 l262.26 291.12 l263.64 290.04 l264.9 288.9 l264.9 288.84 l266.04 287.58 l267.12 286.2 l267.18 286.2 l273.04 277.124 270.233 265.178 260.7 259.92 cf171.36 281.82 m/N12 12.0 Tf(Coordinate)[7.99569 5.9916 5.9916 3.98751 5.9916 3.3276 5.9916 5.3196 3.3276 5.3196 ] pdfxs157.14 267.78 m(projection, offset)[5.994 3.98991 5.994 3.33 5.322 5.322 3.33 3.33 5.994 5.994 2.994 3.0 5.994 3.77991 3.98991 4.66209 5.322 3.33 ] pdfxsn0.75 sc126.000000 186.000000 144.000000 36.000000 rectfill
n126.000000 221.759995 144.239990 0.479996 rectfill
n269.760010 185.759995 0.479980 36.240005 rectfill
n125.760002 185.759995 144.239990 0.479996 rectfill
n125.760002 186.000000 0.480003 36.240005 rectfill
n144.000000 191.399994 108.000000 25.199997 rectfill
0.0 sc181.68 208.62 m/N10 12.0 Tf(World)[11.34 6.0 5.2824 3.3624 6.012 ] pdfxs166.68 194.58 m(Coordinates)[8.6604 5.9964 5.9964 5.3244 6.6684 3.3324 6.6684 5.9964 3.99231 5.3244 4.66449 ] pdfxsn198.0 615.12 m198.975 615.117 198.938 616.622 198.0 616.62 c197.069 616.607 196.938 615.177 198.0 615.12 ceofilln198.0 615.84 m202.56 615.84 l202.38 615.18 l198.48 601.62 l198.0 599.94 l197.52 601.62 l193.62 615.18 l193.44 615.84 l194.1 615.84 l194.58 615.48 l198.48 601.92 l197.52 601.62 l197.52 601.92 l201.42 615.48 l202.38 615.18 l201.9 614.82 l198.0 614.82 lfn194.1 615.33 m198.0 615.33 l1.02002 wS1.0 wn198.0 615.36 m201.9 615.36 l198.0 601.8 l194.1 615.36 leofilln198.03 636.0 m198.03 636.72 l1.5 wS1.0 wn198.03 615.12 m198.03 636.0 l1.5 wS1.0 wn198.0 525.12 m198.975 525.117 198.938 526.622 198.0 526.62 c197.069 526.607 196.938 525.177 198.0 525.12 ceofilln198.0 525.84 m202.56 525.84 l202.38 525.18 l198.48 511.62 l198.0 509.94 l197.52 511.62 l193.62 525.18 l193.44 525.84 l194.1 525.84 l194.58 525.48 l198.48 511.92 l197.52 511.62 l197.52 511.92 l201.42 525.48 l202.38 525.18 l201.9 524.82 l198.0 524.82 lfn194.1 525.33 m198.0 525.33 l1.02002 wS1.0 wn198.0 525.36 m201.9 525.36 l198.0 511.8 l194.1 525.36 leofilln198.03 546.0 m198.03 546.72 l1.5 wS1.0 wn198.03 525.12 m198.03 546.0 l1.5 wS1.0 wn198.0 453.12 m198.975 453.117 198.938 454.622 198.0 454.62 c197.069 454.607 196.938 453.177 198.0 453.12 ceofilln198.0 453.84 m202.56 453.84 l202.38 453.18 l198.48 439.62 l198.0 437.94 l197.52 439.62 l193.62 453.18 l193.44 453.84 l194.1 453.84 l194.58 453.48 l198.48 439.92 l197.52 439.62 l197.52 439.92 l201.42 453.48 l202.38 453.18 l201.9 452.82 l198.0 452.82 lfn194.1 453.33 m198.0 453.33 l1.01999 wS1.0 wn198.0 453.36 m201.9 453.36 l198.0 439.8 l194.1 453.36 leofilln198.03 474.0 m198.03 474.72 l1.5 wS1.0 wn198.03 453.12 m198.03 474.0 l1.5 wS1.0 wn198.0 381.12 m198.985 381.074 198.932 382.637 198.0 382.62 c197.117 382.635 196.883 381.162 198.0 381.12 ceofilln198.0 381.84 m202.56 381.84 l202.38 381.18 l198.48 367.62 l198.0 365.94 l197.52 367.62 l193.62 381.18 l193.44 381.84 l194.1 381.84 l194.58 381.48 l198.48 367.92 l197.52 367.62 l197.52 367.92 l201.42 381.48 l202.38 381.18 l201.9 380.82 l198.0 380.82 lfn194.1 381.33 m198.0 381.33 l1.01999 wS1.0 wn198.0 381.36 m201.9 381.36 l198.0 367.8 l194.1 381.36 leofilln198.03 402.0 m198.03 402.72 l1.5 wS1.0 wn198.03 381.12 m198.03 402.0 l1.5 wS1.0 wn198.0 309.12 m198.985 309.074 198.932 310.637 198.0 310.62 c197.117 310.635 196.883 309.162 198.0 309.12 ceofilln198.0 309.84 m202.56 309.84 l202.38 309.18 l198.48 295.62 l198.0 293.94 l197.52 295.62 l193.62 309.18 l193.44 309.84 l194.1 309.84 l194.58 309.48 l198.48 295.92 l197.52 295.62 l197.52 295.92 l201.42 309.48 l202.38 309.18 l201.9 308.82 l198.0 308.82 lfn194.1 309.33 m198.0 309.33 l1.01999 wS1.0 wn198.0 309.36 m201.9 309.36 l198.0 295.8 l194.1 309.36 leofilln198.03 330.0 m198.03 330.72 l1.5 wS1.0 wn198.03 309.12 m198.03 330.0 l1.5 wS1.0 wn198.0 237.12 m198.455 237.132 198.708 237.385 198.72 237.84 c198.72 238.02 l198.54 238.38 l198.42 238.5 l198.3 238.56 l198.12 238.56 l198.0 238.62 l197.82 238.56 l197.7 238.56 l197.58 238.5 l197.46 238.38 l197.4 238.26 l197.28 238.14 l197.28 238.02 l197.22 237.84 l197.28 237.72 l197.28 237.54 l197.4 237.42 l197.46 237.3 l197.82 237.12 l198.0 237.12 leofilln198.0 237.84 m202.56 237.84 l202.38 237.18 l198.48 223.62 l198.0 221.94 l197.52 223.62 l193.62 237.18 l193.44 237.84 l194.1 237.84 l194.58 237.48 l198.48 223.92 l197.52 223.62 l197.52 223.92 l201.42 237.48 l202.38 237.18 l201.9 236.82 l198.0 236.82 lfn194.1 237.33 m198.0 237.33 l1.02 wS1.0 wn198.0 237.36 m201.9 237.36 l198.0 223.8 l194.1 237.36 leofilln198.03 258.0 m198.03 258.72 l1.5 wS1.0 wn198.03 237.12 m198.03 258.0 l1.5 wS1.0 w324.0 587.16 m/N17 12.0 Tf(CRPIX)[7.19887 7.19887 7.19887 7.19887 7.19887 ] pdfxs360.0 587.16 m/N18 12.0 Tf(j) show363.3 587.16 m/N12 12.0 Tf(,) show324.0 573.12 m/N17 12.0 Tf(PC)[7.19887 7.19887 ] pdfxs338.4 573.12 m/N18 12.0 Tf(i_j)[3.3192 5.9832 3.3192 ] pdfxs351.06 573.12 m/N12 12.0 Tf( or )[3.0 5.988 3.98391 3.0 ] pdfxs324.0 559.14 m/N17 12.0 Tf(CD)[7.19887 7.19887 ] pdfxs338.4 559.14 m/N18 12.0 Tf(i_j)[3.3192 5.9832 3.3192 ] pdfxs324.6 418.08 m/N17 12.0 Tf(CDELT)[7.19887 7.19887 7.19887 7.19887 7.19887 ] pdfxs360.18 418.08 m/N18 12.0 Tf(i) show324.0 286.02 m/N17 12.0 Tf(CTYPE)[7.19887 7.19887 7.19887 7.19887 7.19887 ] pdfxs360.0 286.02 m/N18 12.0 Tf(i) show363.3 286.02 m/N12 12.0 Tf(,) show324.0 271.98 m/N17 12.0 Tf(CRVAL)[7.19887 7.19887 7.19887 7.19887 7.19887 ] pdfxs360.0 271.98 m/N18 12.0 Tf(i) show324.0 258.0 m/N17 12.0 Tf(PV)[7.19887 7.19887 ] pdfxs337.74 258.0 m/N18 12.0 Tf(i_m)[3.3192 5.9832 9.3192 ] pdfxsn285.12 420.0 m285.12 419.82 l285.24 419.58 l285.3 419.46 l285.42 419.4 l285.54 419.28 l286.14 419.28 l286.26 419.4 l286.38 419.46 l286.5 419.58 l286.62 419.82 l286.62 420.0 l286.635 420.883 285.162 421.117 285.12 420.0 ceofilln285.84 420.0 m285.84 415.44 l285.18 415.62 l271.62 419.52 l269.94 420.0 l271.62 420.48 l285.18 424.38 l285.84 424.56 l285.84 423.9 l285.48 423.42 l271.92 419.52 l271.62 420.48 l271.92 420.48 l285.48 416.58 l285.18 415.62 l284.82 416.1 l284.82 420.0 lfn285.33 420.0 m285.33 423.9 l1.01999 wS1.0 wn285.36 420.0 m285.36 416.1 l271.8 420.0 l285.36 423.9 leofilln320.76 419.22 m320.76 420.72 l0.720001 wS1.0 wn285.12 419.97 m320.4 419.97 l1.5 wS1.0 wn284.4 573.72 m284.4 569.58 l283.74 569.76 l271.62 573.24 l269.94 573.72 l271.62 574.2 l283.74 577.68 l284.4 577.86 l284.4 577.2 l284.04 576.72 l271.92 573.24 l271.62 574.2 l271.92 574.2 l284.04 570.72 l283.74 569.76 l283.38 570.24 l283.38 573.72 lfn283.89 573.72 m283.89 577.2 l1.01999 wS1.0 wn283.92 573.72 m283.92 570.24 l271.8 573.72 l283.92 577.2 leofilln320.64 573.18 m320.64 574.2 l0.480011 wS1.0 wn283.92 573.69 m320.4 573.69 l1.02002 wS1.0 wn285.3 276.0 m285.3 275.82 l285.36 275.7 l285.48 275.46 l285.6 275.4 l285.72 275.28 l285.9 275.28 l286.02 275.22 l286.2 275.28 l286.32 275.28 l286.44 275.4 l286.56 275.46 l286.68 275.58 l286.74 275.7 l286.74 275.82 l286.8 276.0 l286.74 276.12 l286.74 276.3 l286.68 276.42 l286.56 276.54 l286.2 276.72 l286.02 276.72 l285.565 276.708 285.312 276.455 285.3 276.0 ceofilln286.02 276.0 m286.02 271.44 l285.36 271.62 l271.8 275.52 l270.12 276.0 l271.8 276.48 l285.36 280.38 l286.02 280.56 l286.02 279.9 l285.66 279.42 l272.1 275.52 l271.8 276.48 l272.1 276.48 l285.66 272.58 l285.36 271.62 l285.0 272.1 l285.0 276.0 lfn285.51 276.0 m285.51 279.9 l1.01999 wS1.0 wn285.54 276.0 m285.54 272.1 l271.98 276.0 l285.54 279.9 leofilln320.94 275.22 m320.94 276.72 l0.720001 wS1.0 wn285.3 275.97 m320.58 275.97 l1.5 wS1.0 wQ[/EMC PDFMark5PDFVars/TermAll get exec end end%%PageTrailer%%Trailer%%DocumentNeededResources:%%+ font TimesNewRomanPS-BoldMT%%+ font CourierNewPS-BoldMT%%+ font TimesNewRomanPS-BoldItalicMT%%+ font TimesNewRomanPSMT%%EOF